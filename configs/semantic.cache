;; Object configs/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "configs/"
  :tables (list 
   (semanticdb-table "cfg_cedet.el"
    :major-mode 'emacs-lisp-mode
    :tags 'nil
    :file "cfg_cedet.el"
    )
   (semanticdb-table "cfg_tramp.el"
    :major-mode 'emacs-lisp-mode
    :tags 'nil
    :file "cfg_tramp.el"
    )
   (semanticdb-table "cfg_ecb.el"
    :major-mode 'emacs-lisp-mode
    :tags 'nil
    :file "cfg_ecb.el"
    :pointmax 939
    :unmatched-syntax 'nil
    )
   (semanticdb-table "cfg_linum.el"
    :major-mode 'emacs-lisp-mode
    :tags 'nil
    :file "cfg_linum.el"
    )
   (semanticdb-table "cfg_keybindings.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("global-set-key" code nil nil [1 54]) ("global-set-key" code nil nil [55 104]) ("global-set-key" code nil nil [106 157]) ("global-set-key" code nil nil [159 214]) ("global-set-key" code nil nil [215 268]) ("global-set-key" code nil nil [303 356]))
    :file "cfg_keybindings.el"
    :pointmax 366
    )
   (semanticdb-table "cfg_javascript.el"
    :major-mode 'emacs-lisp-mode
    :tags 'nil
    :file "cfg_javascript.el"
    )
   (semanticdb-table "cfg_highlight_current_line.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("highlight-current-line" include nil nil [1 34]) ("custom-set-variables" code nil nil [36 125]) ("custom-set-faces" code nil nil [127 205]) ("cond" code nil nil [373 496]))
    :file "cfg_highlight_current_line.el"
    :pointmax 496
    )
   (semanticdb-table "cfg_browser.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("setq" code nil nil [52 195]))
    :file "cfg_browser.el"
    :pointmax 195
    )
   (semanticdb-table "cfg_python.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("setq" code nil nil [41 109]) ("setq" code nil nil [110 187]) ("add-to-list" code nil nil [188 250]) ("setq" code nil nil [251 354]) ("python-mode" function (:prototype-flag t :user-visible-flag t) nil [355 417]) ("doctest-mode" function (:prototype-flag t :user-visible-flag t) nil [418 503]) ("pymacs" include nil nil [544 561]) ("pymacs-load" code nil nil [562 594]) ("define-skeleton" code nil nil [605 711]) ("define-key" code nil nil [712 766]) ("py-doc-search" function (:user-visible-flag t :arguments ("w")) nil [788 1456]) ("add-hook" code nil nil [1458 1540]) ("when" code nil nil [1562 2017]))
    :file "cfg_python.el"
    :pointmax 2017
    )
   (semanticdb-table "cfg_mmmode.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("mmm-mode" include nil nil [29 48]) ("setq" code nil nil [49 78]) ("mmm-sample" include nil nil [79 100]))
    :file "cfg_mmmode.el"
    :pointmax 100
    )
   (semanticdb-table "cfg_orgmode.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("setq" code nil nil [31 62]) ("setq" code nil nil [63 95]) ("setq" code nil nil [195 280]) ("setq" code nil nil [281 386]) ("setq" code nil nil [387 408]))
    :file "cfg_orgmode.el"
    :pointmax 454
    :unmatched-syntax 'nil
    )
   (semanticdb-table "cfg_uniquify.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("uniquify" include nil nil [1 20]) ("setq" code nil nil [21 63]) ("setq" code nil nil [64 93]) ("setq" code nil nil [94 131]) ("setq" code nil nil [166 206]))
    :file "cfg_uniquify.el"
    :pointmax 241
    :unmatched-syntax 'nil
    )
   (semanticdb-table "cfg_generic.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("prefer-coding-system" code nil nil [27 56]) ("setq" code nil nil [70 108]) ("setq" code nil nil [132 172]) ("global-font-lock-mode" code nil nil [197 222]) ("setq-default" code nil nil [245 280]) ("setq" code nil nil [311 368]) ("toggle-debug-on-error" code nil nil [406 431]) ("fset" code nil nil [459 488]) ("setq" code nil nil [559 593]) ("display-time" code nil nil [621 635]) ("setq" code nil nil [671 703]) ("tool-bar-mode" code nil nil [724 742]) ("menu-bar-mode" code nil nil [769 787]) ("scroll-bar-mode" code nil nil [788 808]) ("setq-default" code nil nil [809 845]) ("set-default-font" code nil nil [879 962]) ("show-paren-mode" code nil nil [963 982]))
    :file "cfg_generic.el"
    :pointmax 1010
    :unmatched-syntax 'nil
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0pre4"
  :semanticdb-version "2.0pre4"
  )
